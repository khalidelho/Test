// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hHW5shLAP4XsY42yYPZTin
// Component: ygKiJ5GTxG

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_hackathon.module.css"; // plasmic-import: hHW5shLAP4XsY42yYPZTin/projectcss
import sty from "./PlasmicGraphLoading.module.css"; // plasmic-import: ygKiJ5GTxG/css

import SolidzapIcon from "./icons/PlasmicIcon__Solidzap"; // plasmic-import: 7mP8uPuXt/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: Cd3EDFzXTN/icon
import CargasStationIcon from "./icons/PlasmicIcon__CargasStation"; // plasmic-import: Zzsi_RspOT/icon
import Rectangle1Icon from "./icons/PlasmicIcon__Rectangle1"; // plasmic-import: u1fF8JwlxJ/icon
import RegularpackageIcon from "./icons/PlasmicIcon__Regularpackage"; // plasmic-import: j_VXJmEC5i/icon
import Rectangle21Icon from "./icons/PlasmicIcon__Rectangle21"; // plasmic-import: Z6PzZCLCMm/icon
import Line17Icon from "./icons/PlasmicIcon__Line17"; // plasmic-import: VRY13TbgAG/icon
import Line22Icon from "./icons/PlasmicIcon__Line22"; // plasmic-import: Jssvw4eTHm/icon
import Ellipse7Icon from "./icons/PlasmicIcon__Ellipse7"; // plasmic-import: yYPDGi3Idh/icon
import ActionfingerprintIcon from "./icons/PlasmicIcon__Actionfingerprint"; // plasmic-import: 1LXTQsdU2h/icon
import Ellipse4Icon from "./icons/PlasmicIcon__Ellipse4"; // plasmic-import: QOqPUC9Rcr/icon
import Group5Icon from "./icons/PlasmicIcon__Group5"; // plasmic-import: _PyFQ-RsIY/icon
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: 3ZUm589dZr/icon
import Rectangle10Icon from "./icons/PlasmicIcon__Rectangle10"; // plasmic-import: 24UqbMZTLz/icon
import Rectangle11Icon from "./icons/PlasmicIcon__Rectangle11"; // plasmic-import: VgE_Vg0Igb/icon
import line15K9ZGaMsZg from "./images/line15.svg"; // plasmic-import: k9ZGaMSZg/picture
import ellipse3Ax18AuFf1P from "./images/ellipse3.svg"; // plasmic-import: Ax18auFf1p/picture

export type PlasmicGraphLoading__VariantMembers = {};
export type PlasmicGraphLoading__VariantsArgs = {};
type VariantPropType = keyof PlasmicGraphLoading__VariantsArgs;
export const PlasmicGraphLoading__VariantProps = new Array<VariantPropType>();

export type PlasmicGraphLoading__ArgsType = {};
type ArgPropType = keyof PlasmicGraphLoading__ArgsType;
export const PlasmicGraphLoading__ArgProps = new Array<ArgPropType>();

export type PlasmicGraphLoading__OverridesType = {
  root?: p.Flex<"div">;
  graphLoading1?: p.Flex<"div">;
  frame2?: p.Flex<"div">;
  group21?: p.Flex<"div">;
  rectangle2?: p.Flex<"div">;
  group20?: p.Flex<"div">;
  rectangle5?: p.Flex<"div">;
  group30?: p.Flex<"div">;
  group24?: p.Flex<"div">;
  youVsLastMonth?: p.Flex<"div">;
  group28?: p.Flex<"div">;
  group22?: p.Flex<"div">;
  group25?: p.Flex<"div">;
  group27?: p.Flex<"div">;
  group16?: p.Flex<"div">;
  rectangle16?: p.Flex<"div">;
  rectangle12?: p.Flex<"div">;
};

export interface DefaultGraphLoadingProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicGraphLoading__RenderFunc(props: {
  variants: PlasmicGraphLoading__VariantsArgs;
  args: PlasmicGraphLoading__ArgsType;
  overrides: PlasmicGraphLoading__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"graphLoading1"}
            data-plasmic-override={overrides.graphLoading1}
            className={classNames(projectcss.all, sty.graphLoading1)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame2"}
              data-plasmic-override={overrides.frame2}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame2)}
            >
              <div
                data-plasmic-name={"group21"}
                data-plasmic-override={overrides.group21}
                className={classNames(projectcss.all, sty.group21)}
              >
                <div
                  data-plasmic-name={"rectangle2"}
                  data-plasmic-override={overrides.rectangle2}
                  className={classNames(projectcss.all, sty.rectangle2)}
                />

                <SolidzapIcon
                  className={classNames(projectcss.all, sty.svg___1KBr)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oInv
                  )}
                >
                  {"Electricity"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eiiY9
                  )}
                >
                  {"22.7 Lbs of Co2/Day Emitted"}
                </div>
                <VectorIcon
                  className={classNames(projectcss.all, sty.svg___7V4Rs)}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"group20"}
                data-plasmic-override={overrides.group20}
                className={classNames(projectcss.all, sty.group20)}
              >
                <div
                  data-plasmic-name={"rectangle5"}
                  data-plasmic-override={overrides.rectangle5}
                  className={classNames(projectcss.all, sty.rectangle5)}
                />

                <CargasStationIcon
                  className={classNames(projectcss.all, sty.svg__oR1D)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ukQ
                  )}
                >
                  {"Gas"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__g04C9
                  )}
                >
                  {"18.2 Tons of Co2/Day Emitted"}
                </div>
                <VectorIcon
                  className={classNames(projectcss.all, sty.svg__dryZo)}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"group30"}
                data-plasmic-override={overrides.group30}
                className={classNames(projectcss.all, sty.group30)}
              >
                <div
                  data-plasmic-name={"group24"}
                  data-plasmic-override={overrides.group24}
                  className={classNames(projectcss.all, sty.group24)}
                >
                  <Rectangle1Icon
                    className={classNames(projectcss.all, sty.svg__tuXxz)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hyIjv
                    )}
                  >
                    {".7 Lbs of Co2/Day Emitted"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__icJWn
                    )}
                  >
                    {"Packages"}
                  </div>
                  <RegularpackageIcon
                    className={classNames(projectcss.all, sty.svg__o1Tav)}
                    role={"img"}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__ccNcj)}
                    role={"img"}
                  />
                </div>
              </div>
            </p.Stack>
            <Rectangle21Icon
              className={classNames(projectcss.all, sty.svg__qs6HA)}
              role={"img"}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__rXu4O)}
              displayHeight={"4px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"352px" as const}
              loading={"lazy" as const}
              src={{
                src: line15K9ZGaMsZg,
                fullWidth: 352,
                fullHeight: 4,
                aspectRatio: 88
              }}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__lk9Ak)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__blEfR)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg___4OFyo)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__zGLag)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__j4IL9)}
              role={"img"}
            />

            <Line22Icon
              className={classNames(projectcss.all, sty.svg__k3R81)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__hzomH)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__rscxn)}
              role={"img"}
            />

            <Line17Icon
              className={classNames(projectcss.all, sty.svg__oKzyV)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ixRu7
              )}
            >
              {"good"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lmfnN
              )}
            >
              {"bad"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bHd4
              )}
            >
              {"you are here"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__okiRz
              )}
            >
              {"AVG users"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__b9MNl
              )}
            >
              {"My Data:"}
            </div>
            <Ellipse7Icon
              className={classNames(projectcss.all, sty.svg__snVzP)}
              role={"img"}
            />

            <Ellipse7Icon
              className={classNames(projectcss.all, sty.svg__oDut2)}
              role={"img"}
            />

            <ActionfingerprintIcon
              className={classNames(projectcss.all, sty.svg__b0JN5)}
              role={"img"}
            />

            <div
              data-plasmic-name={"youVsLastMonth"}
              data-plasmic-override={overrides.youVsLastMonth}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.youVsLastMonth
              )}
            >
              {"Welcome Back\nJonathan!"}
            </div>
            <div
              data-plasmic-name={"group28"}
              data-plasmic-override={overrides.group28}
              className={classNames(projectcss.all, sty.group28)}
            >
              <div
                data-plasmic-name={"group22"}
                data-plasmic-override={overrides.group22}
                className={classNames(projectcss.all, sty.group22)}
              >
                <div
                  data-plasmic-name={"group25"}
                  data-plasmic-override={overrides.group25}
                  className={classNames(projectcss.all, sty.group25)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__iWvEt)}
                    displayHeight={"117px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"119px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: ellipse3Ax18AuFf1P,
                      fullWidth: 119,
                      fullHeight: 117,
                      aspectRatio: 1.017094
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__a3Ka4
                    )}
                  >
                    {"45 kg/day"}
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cuaRj
                )}
              >
                {"your foot print"}
              </div>
            </div>
            <Ellipse4Icon
              className={classNames(projectcss.all, sty.svg__md8Lz)}
              role={"img"}
            />

            <Ellipse4Icon
              className={classNames(projectcss.all, sty.svg__jdbaZ)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dKkki
              )}
            >
              {"My Categories:"}
            </div>
            <div
              data-plasmic-name={"group27"}
              data-plasmic-override={overrides.group27}
              className={classNames(projectcss.all, sty.group27)}
            >
              <Group5Icon
                className={classNames(projectcss.all, sty.svg__sS55P)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wzpDm
                )}
              >
                {"You vs Rest of People"}
              </div>
              <div
                data-plasmic-name={"group16"}
                data-plasmic-override={overrides.group16}
                className={classNames(projectcss.all, sty.group16)}
              >
                <div
                  data-plasmic-name={"rectangle16"}
                  data-plasmic-override={overrides.rectangle16}
                  className={classNames(projectcss.all, sty.rectangle16)}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__tyU3D)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__rraSz)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__ds6XL)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__scW9X)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__c8Nve)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__uabSd)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__yr7Ip)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg___3Gyxn)}
                  role={"img"}
                />

                <Rectangle10Icon
                  className={classNames(projectcss.all, sty.svg__cSqAv)}
                  role={"img"}
                />

                <Rectangle11Icon
                  className={classNames(projectcss.all, sty.svg__xbl4)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"rectangle12"}
                  data-plasmic-override={overrides.rectangle12}
                  className={classNames(projectcss.all, sty.rectangle12)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p2K2S
                  )}
                >
                  {"In your area"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6JvXt
                  )}
                >
                  {"USA"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nuLqM
                  )}
                >
                  {"Global"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zcqxk
                  )}
                >
                  {"0"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qjb9Q
                  )}
                >
                  {"10"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7TNN
                  )}
                >
                  {"20"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tCvgM
                  )}
                >
                  {"30"}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "graphLoading1",
    "frame2",
    "group21",
    "rectangle2",
    "group20",
    "rectangle5",
    "group30",
    "group24",
    "youVsLastMonth",
    "group28",
    "group22",
    "group25",
    "group27",
    "group16",
    "rectangle16",
    "rectangle12"
  ],
  graphLoading1: [
    "graphLoading1",
    "frame2",
    "group21",
    "rectangle2",
    "group20",
    "rectangle5",
    "group30",
    "group24",
    "youVsLastMonth",
    "group28",
    "group22",
    "group25",
    "group27",
    "group16",
    "rectangle16",
    "rectangle12"
  ],
  frame2: [
    "frame2",
    "group21",
    "rectangle2",
    "group20",
    "rectangle5",
    "group30",
    "group24"
  ],
  group21: ["group21", "rectangle2"],
  rectangle2: ["rectangle2"],
  group20: ["group20", "rectangle5"],
  rectangle5: ["rectangle5"],
  group30: ["group30", "group24"],
  group24: ["group24"],
  youVsLastMonth: ["youVsLastMonth"],
  group28: ["group28", "group22", "group25"],
  group22: ["group22", "group25"],
  group25: ["group25"],
  group27: ["group27", "group16", "rectangle16", "rectangle12"],
  group16: ["group16", "rectangle16", "rectangle12"],
  rectangle16: ["rectangle16"],
  rectangle12: ["rectangle12"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  graphLoading1: "div";
  frame2: "div";
  group21: "div";
  rectangle2: "div";
  group20: "div";
  rectangle5: "div";
  group30: "div";
  group24: "div";
  youVsLastMonth: "div";
  group28: "div";
  group22: "div";
  group25: "div";
  group27: "div";
  group16: "div";
  rectangle16: "div";
  rectangle12: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGraphLoading__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGraphLoading__VariantsArgs;
    args?: PlasmicGraphLoading__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGraphLoading__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicGraphLoading__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicGraphLoading__ArgProps,
          internalVariantPropNames: PlasmicGraphLoading__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicGraphLoading__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGraphLoading";
  } else {
    func.displayName = `PlasmicGraphLoading.${nodeName}`;
  }
  return func;
}

export const PlasmicGraphLoading = Object.assign(
  // Top-level PlasmicGraphLoading renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    graphLoading1: makeNodeComponent("graphLoading1"),
    frame2: makeNodeComponent("frame2"),
    group21: makeNodeComponent("group21"),
    rectangle2: makeNodeComponent("rectangle2"),
    group20: makeNodeComponent("group20"),
    rectangle5: makeNodeComponent("rectangle5"),
    group30: makeNodeComponent("group30"),
    group24: makeNodeComponent("group24"),
    youVsLastMonth: makeNodeComponent("youVsLastMonth"),
    group28: makeNodeComponent("group28"),
    group22: makeNodeComponent("group22"),
    group25: makeNodeComponent("group25"),
    group27: makeNodeComponent("group27"),
    group16: makeNodeComponent("group16"),
    rectangle16: makeNodeComponent("rectangle16"),
    rectangle12: makeNodeComponent("rectangle12"),

    // Metadata about props expected for PlasmicGraphLoading
    internalVariantProps: PlasmicGraphLoading__VariantProps,
    internalArgProps: PlasmicGraphLoading__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicGraphLoading;
/* prettier-ignore-end */
