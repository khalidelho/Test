// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hHW5shLAP4XsY42yYPZTin
// Component: dypzx1jmEoDu

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_hackathon.module.css"; // plasmic-import: hHW5shLAP4XsY42yYPZTin/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: dypzx1jmEoDu/css

import SolidzapIcon from "./icons/PlasmicIcon__Solidzap"; // plasmic-import: 7mP8uPuXt/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: Cd3EDFzXTN/icon
import CargasStationIcon from "./icons/PlasmicIcon__CargasStation"; // plasmic-import: Zzsi_RspOT/icon
import Rectangle1Icon from "./icons/PlasmicIcon__Rectangle1"; // plasmic-import: u1fF8JwlxJ/icon
import RegularpackageIcon from "./icons/PlasmicIcon__Regularpackage"; // plasmic-import: j_VXJmEC5i/icon
import Rectangle21Icon from "./icons/PlasmicIcon__Rectangle21"; // plasmic-import: Z6PzZCLCMm/icon
import Line17Icon from "./icons/PlasmicIcon__Line17"; // plasmic-import: VRY13TbgAG/icon
import Line22Icon from "./icons/PlasmicIcon__Line22"; // plasmic-import: Jssvw4eTHm/icon
import Ellipse7Icon from "./icons/PlasmicIcon__Ellipse7"; // plasmic-import: yYPDGi3Idh/icon
import ActionfingerprintIcon from "./icons/PlasmicIcon__Actionfingerprint"; // plasmic-import: 1LXTQsdU2h/icon
import Group4Icon from "./icons/PlasmicIcon__Group4"; // plasmic-import: HQp4egonjD/icon
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: 3ZUm589dZr/icon
import Ellipse4Icon from "./icons/PlasmicIcon__Ellipse4"; // plasmic-import: QOqPUC9Rcr/icon
import line14BkESsrpbc from "./images/line14.svg"; // plasmic-import: bkE_ssrpbc/picture
import ellipse2Vobxeujydm from "./images/ellipse2.svg"; // plasmic-import: vobxeujydm/picture

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  homePage?: p.Flex<"div">;
  homepage?: p.Flex<"div">;
  frame2?: p.Flex<"div">;
  group21?: p.Flex<"div">;
  rectangle2?: p.Flex<"div">;
  group20?: p.Flex<"div">;
  rectangle5?: p.Flex<"div">;
  group30?: p.Flex<"div">;
  group24?: p.Flex<"div">;
  youVsLastMonth?: p.Flex<"div">;
  group28?: p.Flex<"div">;
  group22?: p.Flex<"div">;
  group25?: p.Flex<"div">;
  group27?: p.Flex<"div">;
  group16?: p.Flex<"div">;
  rectangle16?: p.Flex<"div">;
  rectangle10?: p.Flex<"div">;
  rectangle11?: p.Flex<"div">;
  rectangle12?: p.Flex<"div">;
  link?: p.Flex<"a">;
};

export interface DefaultHomepageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <div
            data-plasmic-name={"homePage"}
            data-plasmic-override={overrides.homePage}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.homePage
            )}
          >
            <div
              data-plasmic-name={"homepage"}
              data-plasmic-override={overrides.homepage}
              className={classNames(projectcss.all, sty.homepage)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2"}
                data-plasmic-override={overrides.frame2}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2)}
              >
                <div
                  data-plasmic-name={"group21"}
                  data-plasmic-override={overrides.group21}
                  className={classNames(projectcss.all, sty.group21)}
                >
                  <div
                    data-plasmic-name={"rectangle2"}
                    data-plasmic-override={overrides.rectangle2}
                    className={classNames(projectcss.all, sty.rectangle2)}
                  />

                  <SolidzapIcon
                    className={classNames(projectcss.all, sty.svg__qd5Cv)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0XJys
                    )}
                  >
                    {"Electricity"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___59O0C
                    )}
                  >
                    {"22.7 Lbs of Co2/Day Emitted"}
                  </div>
                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__o69NY)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"group20"}
                  data-plasmic-override={overrides.group20}
                  className={classNames(projectcss.all, sty.group20)}
                >
                  <div
                    data-plasmic-name={"rectangle5"}
                    data-plasmic-override={overrides.rectangle5}
                    className={classNames(projectcss.all, sty.rectangle5)}
                  />

                  <CargasStationIcon
                    className={classNames(projectcss.all, sty.svg___2DcOn)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fXrc
                    )}
                  >
                    {"Gas"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2XYm
                    )}
                  >
                    {"18.2 Tons of Co2/Day Emitted"}
                  </div>
                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg___0YKnS)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"group30"}
                  data-plasmic-override={overrides.group30}
                  className={classNames(projectcss.all, sty.group30)}
                >
                  <div
                    data-plasmic-name={"group24"}
                    data-plasmic-override={overrides.group24}
                    className={classNames(projectcss.all, sty.group24)}
                  >
                    <Rectangle1Icon
                      className={classNames(projectcss.all, sty.svg___33Hxk)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uv9K
                      )}
                    >
                      {".7 Lbs of Co2/Day Emitted"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zLmJz
                      )}
                    >
                      {"Packages"}
                    </div>
                    <RegularpackageIcon
                      className={classNames(projectcss.all, sty.svg__pt4Q)}
                      role={"img"}
                    />

                    <VectorIcon
                      className={classNames(projectcss.all, sty.svg__dvg12)}
                      role={"img"}
                    />
                  </div>
                </div>
              </p.Stack>
              <Rectangle21Icon
                className={classNames(projectcss.all, sty.svg__hsjU)}
                role={"img"}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__azgdg)}
                displayHeight={"4px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"352px" as const}
                loading={"lazy" as const}
                src={{
                  src: line14BkESsrpbc,
                  fullWidth: 352,
                  fullHeight: 4,
                  aspectRatio: 88
                }}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__oWdKx)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__bBe92)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__m4AL)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__kqj3C)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__xXuas)}
                role={"img"}
              />

              <Line22Icon
                className={classNames(projectcss.all, sty.svg__atOL)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg___7Bfpx)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__mkLLo)}
                role={"img"}
              />

              <Line17Icon
                className={classNames(projectcss.all, sty.svg__tHzHw)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pXLr
                )}
              >
                {"good"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rvdNy
                )}
              >
                {"bad"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mcPaP
                )}
              >
                {"you are here"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oyPJ
                )}
              >
                {"AVG users"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ycVrz
                )}
              >
                {"My Data:"}
              </div>
              <Ellipse7Icon
                className={classNames(projectcss.all, sty.svg___0LTHf)}
                role={"img"}
              />

              <Ellipse7Icon
                className={classNames(projectcss.all, sty.svg__umc7B)}
                role={"img"}
              />

              <ActionfingerprintIcon
                className={classNames(projectcss.all, sty.svg__mii9)}
                role={"img"}
              />

              <div
                data-plasmic-name={"youVsLastMonth"}
                data-plasmic-override={overrides.youVsLastMonth}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.youVsLastMonth
                )}
              >
                {"Welcome Back\nJonathan!"}
              </div>
              <div
                data-plasmic-name={"group28"}
                data-plasmic-override={overrides.group28}
                className={classNames(projectcss.all, sty.group28)}
              >
                <div
                  data-plasmic-name={"group22"}
                  data-plasmic-override={overrides.group22}
                  className={classNames(projectcss.all, sty.group22)}
                >
                  <div
                    data-plasmic-name={"group25"}
                    data-plasmic-override={overrides.group25}
                    className={classNames(projectcss.all, sty.group25)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__xInmr)}
                      displayHeight={"117px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"119px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: ellipse2Vobxeujydm,
                        fullWidth: 119,
                        fullHeight: 117,
                        aspectRatio: 1.017094
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f4Auu
                      )}
                    >
                      {"45 kg/day"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iqokQ
                  )}
                >
                  {"your foot print"}
                </div>
              </div>
              <div
                data-plasmic-name={"group27"}
                data-plasmic-override={overrides.group27}
                className={classNames(projectcss.all, sty.group27)}
              >
                <Group4Icon
                  className={classNames(projectcss.all, sty.svg__shT9V)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oNtRd
                  )}
                >
                  {"You vs Rest of People"}
                </div>
                <div
                  data-plasmic-name={"group16"}
                  data-plasmic-override={overrides.group16}
                  className={classNames(projectcss.all, sty.group16)}
                >
                  <div
                    data-plasmic-name={"rectangle16"}
                    data-plasmic-override={overrides.rectangle16}
                    className={classNames(projectcss.all, sty.rectangle16)}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg___4IMc6)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg__us6OA)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg__hGYi6)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg__dmdzD)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg__fht3L)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg___4GvO6)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg__tUtHk)}
                    role={"img"}
                  />

                  <Line1Icon
                    className={classNames(projectcss.all, sty.svg___6XvCi)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"rectangle10"}
                    data-plasmic-override={overrides.rectangle10}
                    className={classNames(projectcss.all, sty.rectangle10)}
                  />

                  <div
                    data-plasmic-name={"rectangle11"}
                    data-plasmic-override={overrides.rectangle11}
                    className={classNames(projectcss.all, sty.rectangle11)}
                  />

                  <div
                    data-plasmic-name={"rectangle12"}
                    data-plasmic-override={overrides.rectangle12}
                    className={classNames(projectcss.all, sty.rectangle12)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kwSfh
                    )}
                  >
                    {"In your area"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jZcKu
                    )}
                  >
                    {"USA"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tlZr
                    )}
                  >
                    {"Global"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3980M
                    )}
                  >
                    {"0"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7P1DC
                    )}
                  >
                    {"10"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0LJ0D
                    )}
                  >
                    {"20"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___90SGj
                    )}
                  >
                    {"30"}
                  </div>
                </div>
              </div>
              <Ellipse4Icon
                className={classNames(projectcss.all, sty.svg__qTMip)}
                role={"img"}
              />

              <a
                data-plasmic-name={"link"}
                data-plasmic-override={overrides.link}
                className={classNames(projectcss.all, projectcss.a, sty.link)}
                href={`/new-page`}
              >
                <Ellipse4Icon
                  className={classNames(projectcss.all, sty.svg__pyQi)}
                  role={"img"}
                />
              </a>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ime24
                )}
              >
                {"My Categories:"}
              </div>
            </div>
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  homePage: [
    "homePage",
    "homepage",
    "frame2",
    "group21",
    "rectangle2",
    "group20",
    "rectangle5",
    "group30",
    "group24",
    "youVsLastMonth",
    "group28",
    "group22",
    "group25",
    "group27",
    "group16",
    "rectangle16",
    "rectangle10",
    "rectangle11",
    "rectangle12",
    "link"
  ],
  homepage: [
    "homepage",
    "frame2",
    "group21",
    "rectangle2",
    "group20",
    "rectangle5",
    "group30",
    "group24",
    "youVsLastMonth",
    "group28",
    "group22",
    "group25",
    "group27",
    "group16",
    "rectangle16",
    "rectangle10",
    "rectangle11",
    "rectangle12",
    "link"
  ],
  frame2: [
    "frame2",
    "group21",
    "rectangle2",
    "group20",
    "rectangle5",
    "group30",
    "group24"
  ],
  group21: ["group21", "rectangle2"],
  rectangle2: ["rectangle2"],
  group20: ["group20", "rectangle5"],
  rectangle5: ["rectangle5"],
  group30: ["group30", "group24"],
  group24: ["group24"],
  youVsLastMonth: ["youVsLastMonth"],
  group28: ["group28", "group22", "group25"],
  group22: ["group22", "group25"],
  group25: ["group25"],
  group27: [
    "group27",
    "group16",
    "rectangle16",
    "rectangle10",
    "rectangle11",
    "rectangle12"
  ],
  group16: [
    "group16",
    "rectangle16",
    "rectangle10",
    "rectangle11",
    "rectangle12"
  ],
  rectangle16: ["rectangle16"],
  rectangle10: ["rectangle10"],
  rectangle11: ["rectangle11"],
  rectangle12: ["rectangle12"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  homePage: "div";
  homepage: "div";
  frame2: "div";
  group21: "div";
  rectangle2: "div";
  group20: "div";
  rectangle5: "div";
  group30: "div";
  group24: "div";
  youVsLastMonth: "div";
  group28: "div";
  group22: "div";
  group25: "div";
  group27: "div";
  group16: "div";
  rectangle16: "div";
  rectangle10: "div";
  rectangle11: "div";
  rectangle12: "div";
  link: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "homePage") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("homePage"),
  {
    // Helper components rendering sub-elements
    homepage: makeNodeComponent("homepage"),
    frame2: makeNodeComponent("frame2"),
    group21: makeNodeComponent("group21"),
    rectangle2: makeNodeComponent("rectangle2"),
    group20: makeNodeComponent("group20"),
    rectangle5: makeNodeComponent("rectangle5"),
    group30: makeNodeComponent("group30"),
    group24: makeNodeComponent("group24"),
    youVsLastMonth: makeNodeComponent("youVsLastMonth"),
    group28: makeNodeComponent("group28"),
    group22: makeNodeComponent("group22"),
    group25: makeNodeComponent("group25"),
    group27: makeNodeComponent("group27"),
    group16: makeNodeComponent("group16"),
    rectangle16: makeNodeComponent("rectangle16"),
    rectangle10: makeNodeComponent("rectangle10"),
    rectangle11: makeNodeComponent("rectangle11"),
    rectangle12: makeNodeComponent("rectangle12"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
